# implementing hashing algorithm in awl
let hashTable = []
let maxCapacity=16
let i =0 
while(i<maxCapacity){
  arrayInsert(hashTable,0)
  i=i+1
}

fun hash(s){
   let h = 0
  let  p = 31
  let  st=toArray(s) 
  let  i=0
  while( i < arrayLength(st)){
    h = h * p + toCharCode(arrayGet(i,st))
	 i=i+1
  }
  return h
}

fun hashTablePut(key,value){
    printOut("recived "+key)
    let  index =  hash(key) % maxCapacity
	 hashTable[index] = value
}

fun hashTableGet(key){
	 return hashTable[hash(key) % maxCapacity]
}

hashTablePut("apple",42)
hashTablePut("atoms kun",23)
printOut(hashTable)
printOut(hashTableGet("apple"))
printOut(hashTableGet("atoms kun"))



###
awl v0.02


declare hashTable=[]
declare maxCapacity=16

for(i in 0..16){


}
###
